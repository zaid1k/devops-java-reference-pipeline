import scala.concurrent.duration._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.jdbc.Predef._

import scala.language.postfixOps

class Stocks extends Simulation {

  val httpProtocol = http
    .baseUrl("http://localhost:8080")
    .inferHtmlResources()
  //  .userAgentHeader("Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Mobile Safari/537.36")

  val headers_11 = Map(
    "accept" -> "application/json, text/plain, */*",
    "accept-encoding" -> "gzip, deflate, br",
    "accept-language" -> "en-US,en;q=0.9",
    "content-type" -> "application/json;charset=UTF-8")


  val scn = scenario("Users").exec(http("users")
    .get("/users")
 //   .headers(headers_11)
//    .pause(10)
//    .exec(http("quotes page")
//      .post("/staging/stocks/quote/page")
//      .headers(headers_9)
//      .body(RawFileBody("0013_request.json"))
    )


//  setUp(scn.inject(atOnceUsers(5))).protocols(httpProtocol)

  // performance testing setup with higher load
  setUp(
      scn.inject(
        nothingFor(5),
        atOnceUsers(20),
        constantUsersPerSec(10).during(30.seconds)
      //        rampUsers(40) during (15 seconds),
    )
  ).protocols(httpProtocol).maxDuration( 1 minute)

}